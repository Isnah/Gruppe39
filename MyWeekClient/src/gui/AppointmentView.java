/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import client.Appointment;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import javax.swing.SwingUtilities;

/**
 *
 * @author Laxcor
 */
public class AppointmentView extends javax.swing.JPanel implements PropertyChangeListener, MouseListener {
    
    private MainWindow frame;
    private Appointment model;
    
    
    /**
     * Creates new form AppointmentView
     */
    public AppointmentView(MainWindow frame,Appointment model) {
        initComponents();
        
        this.frame = frame;
        
        addMouseListener(this);
        
        this.model = model;
        model.addPropertyChangeListener(this);
        
        appointmentName.setText(model.getName());
        appointmentTime.setText(model.getTimeFormat());
        appointmentRoom.setText(getRoom());
        appointmentStatus.setText("");
        alarmIcon.setText("");
        
        setPosition();
    }
    private String getRoom() {
        if (model.getRoom() != null) {
            return model.getRoom().getName();
        }
        else { 
            return model.getRoomDescr();
        }
    }
    private void setPosition() {
        int x, y, width, height, durationH, startH;
        startH = Integer.parseInt(model.getTimeFormat().substring(0, 2));
        durationH = Integer.parseInt(model.getTimeFormat().substring(6, 8)) - startH;
        x = 2;
        y = 40*startH; //*antall timer fra 00:00 til start
        width = 110;
        height = 38*durationH; // *antall timer
        setBounds(x, y, width, height);
    }

    @Override
    public void propertyChange(PropertyChangeEvent evt) {
        switch (evt.getPropertyName()) {
            case Appointment.NAME:
                appointmentName.setText(model.getName());
                break;
            case Appointment.START:
                appointmentTime.setText(model.getTimeFormat());
                setPosition();
                break;
            case Appointment.END:
                appointmentTime.setText(model.getTimeFormat());
                setPosition();
                break;
            case Appointment.ROOM:
                appointmentRoom.setText(getRoom());
                break;
            default:
        }
        repaint();
    }
    
    @Override
    public void mouseClicked(MouseEvent e) {
        SwingUtilities.invokeLater(new Runnable() {

                    @Override
                    public void run() {
                        frame.showInformationPanel(model);
                    }
                });
    }

    @Override
    public void mousePressed(MouseEvent e) {
    }

    @Override
    public void mouseReleased(MouseEvent e) {
    }

    @Override
    public void mouseEntered(MouseEvent e) {
    }

    @Override
    public void mouseExited(MouseEvent e) {
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        appointmentName = new javax.swing.JLabel();
        alarmIcon = new javax.swing.JLabel();
        appointmentTime = new javax.swing.JLabel();
        appointmentRoom = new javax.swing.JLabel();
        appointmentStatus = new javax.swing.JLabel();

        setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        setPreferredSize(new java.awt.Dimension(112, 38));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        appointmentName.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        appointmentName.setText("<Name>");
        add(appointmentName, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        alarmIcon.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        alarmIcon.setText("---");
        add(alarmIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 0, -1, -1));

        appointmentTime.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        appointmentTime.setText("<Timestamp>");
        add(appointmentTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, -1, -1));

        appointmentRoom.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        appointmentRoom.setText("<Room nr.>");
        add(appointmentRoom, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, -1, -1));

        appointmentStatus.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        appointmentStatus.setText("---");
        add(appointmentStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 20, -1, -1));
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel alarmIcon;
    private javax.swing.JLabel appointmentName;
    private javax.swing.JLabel appointmentRoom;
    private javax.swing.JLabel appointmentStatus;
    private javax.swing.JLabel appointmentTime;
    // End of variables declaration//GEN-END:variables

}
